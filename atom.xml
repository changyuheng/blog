<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[A Programmer’s Blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://changyuheng.github.io/"/>
  <updated>2014-08-12T15:45:03.187Z</updated>
  <id>http://changyuheng.github.io/</id>
  
  <author>
    <name><![CDATA[Chang Yu-heng (張昱珩)]]></name>
    <email><![CDATA[mr.changyuheng@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[自行組合安全、好記且每個網站相異的密碼]]></title>
    <link href="http://changyuheng.github.io/%E8%87%AA%E8%A1%8C%E7%B5%84%E5%90%88%E5%AE%89%E5%85%A8%E3%80%81%E5%A5%BD%E8%A8%98%E4%B8%94%E6%AF%8F%E5%80%8B%E7%B6%B2%E7%AB%99%E7%9B%B8%E7%95%B0%E7%9A%84%E5%AF%86%E7%A2%BC/"/>
    <id>http://changyuheng.github.io/自行組合安全、好記且每個網站相異的密碼/</id>
    <published>2014-08-03T16:00:00.000Z</published>
    <updated>2014-08-05T15:59:55.000Z</updated>
    <content type="html"><![CDATA[<p>資訊應用和我們的結合愈來愈緊密，保護隱私和機敏資料的最後一道防線－－密碼，顯得更為重要。</p>
<p>我們知道密碼不應過於簡單、容易猜測：不該用生日、電話、常見的單字、人名等等。安全的做法是用密碼產生器產生隨機不同大小寫的字母、數字、符號組合。此外，網站被駭客入侵時有所聞，為了避免因為一個網站的密碼外洩而影響到所有的密碼，應該讓每個網站採用不同的密碼。密碼產生器產生的密碼極其複雜，於是有人發明了密碼管理軟體，來幫忙記住各組密碼。但是一旦我們把所有的密碼都放進同一套軟體，不就又將雞蛋丟進同一個籠子裡了嗎？</p>
<p>一個不同的密碼產生方法：token + pattern。</p>
<p><strong>優點</strong></p>
<ol>
<li>不必將雞蛋放進同一個籠子</li>
<li>容易記憶</li>
<li>每一個網站都不同</li>
<li>較生日、電話等容易猜測的密碼安全</li>
<li>快速方便地輸入密碼，不須透過額外軟體</li>
</ol>
<p><strong>缺點</strong></p>
<ol>
<li>複雜度較密碼產生器產生的密碼低</li>
<li>有被全盤破解的風險</li>
</ol>
<p>Token 是一串自訂的密碼，例如 TAIPEI 的變形 T@iP31。<br>Pattern 是一種能套用到不同網站的規則。例如取網路名稱的尾 2 字和頭 2 字：產生的密碼要給 Google 使用就是 lego；給 Yahoo 就是 ooya。</p>
<p>如此一來在 Google 的密碼就會是 T@iP31lego，在 Yahoo 的密碼是 T@iP31ooya。只要記 token 和 pattern 的規則即可，非常容易記憶。Pattern 的制定可以更加複雜，像是加上「<a href="http://zh.wikipedia.org/zh-tw/%E5%87%B1%E6%92%92%E5%AF%86%E7%A2%BC">凱撒密碼</a>」來混淆。整體的組合也能再加以變化，像是改成 token 1 + pattern 1 + token 2 + pattern 2。</p>
<p>相關文章</p>
<ul>
<li><a href="http://www.pcworld.com/article/252024/create_a_different_secure_easy_to_remember_password_for_every_site.html">Create a Different, Secure, Easy-to-Remember Password for Every Site</a></li>
</ul>
]]></content>
    
    
      <category term="misc" scheme="http://changyuheng.github.io/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Understanding Python Decorators]]></title>
    <link href="http://changyuheng.github.io/understanding-python-decorators/"/>
    <id>http://changyuheng.github.io/understanding-python-decorators/</id>
    <published>2014-05-28T16:00:00.000Z</published>
    <updated>2014-08-04T14:14:29.000Z</updated>
    <content type="html"><![CDATA[<p>Decorator 是一個 Python 中較為進階的語法，因為較難理解故常被提出來討論。這邊提供一個簡潔的說明。</p>
<p>假設有一名為 func 的 function 被名為 decor1 和 decor2 的二 decorator 修飾如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="decorator">@decor1</span></div><div class="line"><span class="decorator">@decor2</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(*args, **kwargs)</span>:</span></div><div class="line">    <span class="keyword">pass</span></div></pre></td></tr></table></figure>

<p>則當我們如下呼叫 func() 時：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">func(*args, **kwargs)</div></pre></td></tr></table></figure>

<p>可以將之理解為：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">decor1(decor2(func))(*args, **kwargs)</div></pre></td></tr></table></figure>

<p>更詳細的說明可以參考：</p>
<ol>
<li><a href="http://simeonfranklin.com/blog/2012/jul/1/python-decorators-in-12-steps/">Understanding Python Decorators in 12 Easy Steps!</a></li>
<li><a href="http://stackoverflow.com/a/739679">How can I make a chain of function decorators in Python?</a></li>
</ol>
]]></content>
    
    
      <category term="programming" scheme="http://changyuheng.github.io/tags/programming/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Implementations of DFS and BFS in Python]]></title>
    <link href="http://changyuheng.github.io/implementations-of-dfs-and-bfs-in-python/"/>
    <id>http://changyuheng.github.io/implementations-of-dfs-and-bfs-in-python/</id>
    <published>2014-05-06T16:00:00.000Z</published>
    <updated>2014-08-04T14:14:29.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://zh.wikipedia.org/zh-tw/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2">DFS</a> 和 <a href="http://zh.wikipedia.org/zh-tw/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2">BFS</a> 在資料結構裡有教，是很基礎的演算法。</p>
<p>在 <a href="http://eddmann.com/posts/depth-first-search-and-breadth-first-search-in-python/">Edd Mann 的網誌</a>上看到 Python 的實作，由其中學到 <code>yield from</code> 的用法。下面利用 <code>yield from</code> 的特性，將該網誌中提到的實作改寫成 generator 的型式。同步放在 Gist 上：<a href="https://gist.github.com/changyuheng/08ffb779d83679393926">DFS</a>、<a href="https://gist.github.com/changyuheng/97d320206af9a0018d7d">BFS</a>。</p>
<p><strong>DFS</strong></p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dfs</span><span class="params">(graph, start, visited=set<span class="params">()</span>)</span>:</span></div><div class="line">    <span class="keyword">if</span> start <span class="keyword">in</span> visited:</div><div class="line">        <span class="keyword">return</span></div><div class="line">    <span class="keyword">yield</span> start</div><div class="line">    visited.add(start)</div><div class="line">    <span class="keyword">for</span> vertex <span class="keyword">in</span> graph[start] - visited:</div><div class="line">        <span class="keyword">yield</span> <span class="keyword">from</span> dfs(graph, vertex, visited=visited)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dfs_paths</span><span class="params">(graph, start, goal, path=list<span class="params">()</span>)</span>:</span></div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> path:</div><div class="line">        path.append(start)</div><div class="line">    <span class="keyword">if</span> start == goal:</div><div class="line">        <span class="keyword">yield</span> path</div><div class="line">    <span class="keyword">for</span> vertex <span class="keyword">in</span> graph[start] - set(path):</div><div class="line">        <span class="keyword">yield</span> <span class="keyword">from</span> dfs_paths(graph, vertex, goal, path=path + [vertex])</div><div class="line"></div><div class="line">graph = {<span class="string">'A'</span>: set([<span class="string">'B'</span>, <span class="string">'C'</span>]),</div><div class="line">         <span class="string">'B'</span>: set([<span class="string">'A'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>]),</div><div class="line">         <span class="string">'C'</span>: set([<span class="string">'A'</span>, <span class="string">'F'</span>]),</div><div class="line">         <span class="string">'D'</span>: set([<span class="string">'B'</span>]),</div><div class="line">         <span class="string">'E'</span>: set([<span class="string">'B'</span>, <span class="string">'F'</span>]),</div><div class="line">         <span class="string">'F'</span>: set([<span class="string">'C'</span>, <span class="string">'E'</span>])}</div><div class="line"></div><div class="line">print(repr([vertex <span class="keyword">for</span> vertex <span class="keyword">in</span> dfs(graph, <span class="string">'A'</span>)]))</div><div class="line">print(repr([path <span class="keyword">for</span> path <span class="keyword">in</span> dfs_paths(graph, <span class="string">'A'</span>, <span class="string">'F'</span>)]))</div></pre></td></tr></table></figure>

<p><strong>BFS</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">bfs</span><span class="params">(graph, queue, visited=set<span class="params">()</span>)</span>:</span></div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> queue:</div><div class="line">        <span class="keyword">return</span></div><div class="line">    start = queue.pop(<span class="number">0</span>)</div><div class="line">    <span class="keyword">yield</span> start</div><div class="line">    visited.add(start)</div><div class="line">    queue += [vertex <span class="keyword">for</span> vertex <span class="keyword">in</span> graph[start] - set(queue) - visited]</div><div class="line">    <span class="keyword">yield</span> <span class="keyword">from</span> bfs(graph, queue, visited=visited)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">bfs_paths</span><span class="params">(graph, queue, goal)</span>:</span></div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> queue:</div><div class="line">        <span class="keyword">return</span></div><div class="line">    (start, path) = queue.pop(<span class="number">0</span>)</div><div class="line">    <span class="keyword">if</span> start == goal:</div><div class="line">        <span class="keyword">yield</span> path</div><div class="line">    queue += [(vertex, path + [vertex]) <span class="keyword">for</span> vertex <span class="keyword">in</span> graph[start] - set(path)]</div><div class="line">    <span class="keyword">yield</span> <span class="keyword">from</span> bfs_paths(graph, queue, goal)</div><div class="line"></div><div class="line">graph = {<span class="string">'A'</span>: set([<span class="string">'B'</span>, <span class="string">'C'</span>]),</div><div class="line">         <span class="string">'B'</span>: set([<span class="string">'A'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>]),</div><div class="line">         <span class="string">'C'</span>: set([<span class="string">'A'</span>, <span class="string">'F'</span>]),</div><div class="line">         <span class="string">'D'</span>: set([<span class="string">'B'</span>]),</div><div class="line">         <span class="string">'E'</span>: set([<span class="string">'B'</span>, <span class="string">'F'</span>]),</div><div class="line">         <span class="string">'F'</span>: set([<span class="string">'C'</span>, <span class="string">'E'</span>])}</div><div class="line"></div><div class="line">print(repr([vertex <span class="keyword">for</span> vertex <span class="keyword">in</span> bfs(graph, [<span class="string">'A'</span>])]))</div><div class="line">print(repr([path <span class="keyword">for</span> path <span class="keyword">in</span> bfs_paths(graph, [(<span class="string">'A'</span>, [<span class="string">'A'</span>])], <span class="string">'F'</span>)]))</div></pre></td></tr></table></figure>

]]></content>
    
    
      <category term="algorithm" scheme="http://changyuheng.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[My Ubuntu GNOME Tweaks]]></title>
    <link href="http://changyuheng.github.io/my-ubuntu-gnome-tweaks/"/>
    <id>http://changyuheng.github.io/my-ubuntu-gnome-tweaks/</id>
    <published>2014-04-22T16:00:00.000Z</published>
    <updated>2014-08-03T06:39:10.000Z</updated>
    <content type="html"><![CDATA[<p>以 Ubuntu GNOME 14.04 LTS 英文語系為基礎。</p>
<h2 id="安裝軟體">安裝軟體</h2>
<ul>
<li><a href="#7z">7z</a></li>
<li><a href="#clipit">ClipIt</a></li>
<li><a href="#gnome-gmail">Gnome Gmail</a></li>
<li><a href="#hime">Hime</a></li>
<li><a href="#java8">Java 8</a></li>
<li><a href="#ubuntu-restricted-extras">ubuntu-restricted-extras</a></li>
<li><a href="#vim">Vim</a></li>
<li><a href="#vlc">VLC</a></li>
<li><a href="#wen-quan-yi-fonts">文泉驛中文字型</a></li>
<li><a href="#boshiamy">嘸蝦米輸入法</a></li>
</ul>
<h2 id="Firefox_附加元件">Firefox 附加元件</h2>
<ul>
<li><a href="#gmail-notifier">Gmail Notifier</a></li>
<li><a href="#gnotifier">GNotifier</a></li>
</ul>
<h2 id="設定">設定</h2>
<ul>
<li><a href="#apt">APT</a></li>
<li><a href="#gnome-tweak-tool">Gnome Tweak Tool</a></li>
<li><a href="#im-config">Input Method Configuration</a></li>
<li><a href="#online-accounts">Online Accounts</a></li>
</ul>
<h3 id="7z"><a name="7z"></a>7z</h3>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> apt install p7zip-full</div></pre></td></tr></table></figure>

<h3 id="ClipIt"><a name="clipit"></a>ClipIt</h3>
<p>剪貼簿管理程序，安裝的主要目的是要他同步剪貼簿的功能。因為 X11 的剪貼簿在「貼上」時，若來源程序已暫停或結束，會因無法讀取來源而無法貼上。可參考：<a href="http://www.jwz.org/doc/x-cut-and-paste.html">X Selections, Cut Buffers, and Kill Rings.</a></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> apt install clipit</div></pre></td></tr></table></figure>

<h3 id="Gnome_Gmail"><a name="gnome-gmail"></a>Gnome Gmail</h3>
<p>讓預設郵件客戶端可被設定為 Gmail。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> apt install gnome-gmail</div></pre></td></tr></table></figure>

<h3 id="Hime"><a name="hime"></a>Hime</h3>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> apt install hime</div></pre></td></tr></table></figure>

<h3 id="Java_8"><a name="java8"></a>Java 8</h3>
<p><a href="http://www.webupd8.org/2012/09/install-oracle-java-8-in-ubuntu-via-ppa.html">Install Oracle Java 8 In Ubuntu Via PPA Repository</a></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> add-apt-repository ppa:webupd8team/java</div><div class="line"><span class="built_in">sudo</span> apt update</div><div class="line"><span class="built_in">sudo</span> apt install oracle-java8-installer</div></pre></td></tr></table></figure>

<h3 id="ubuntu-restricted-extras"><a name="ubuntu-restricted-extras"></a>ubuntu-restricted-extras</h3>
<p>RAR、Flash Player 等非開源的程式之集合。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> apt install ubuntu-restricted-extras</div></pre></td></tr></table></figure>

<h3 id="Vim"><a name="vim"></a>Vim</h3>
<p>Vim with GNOME specific support.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> apt install vim-gnome</div></pre></td></tr></table></figure>

<h3 id="VLC"><a name="vlc"></a>VLC</h3>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> apt install vlc</div></pre></td></tr></table></figure>

<h3 id="文泉驛中文字型"><a name="wen-quan-yi-fonts"></a>文泉驛中文字型</h3>
<p>開源的中文字型。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> apt install ttf-wqy-*</div></pre></td></tr></table></figure>

<h3 id="嘸蝦米輸入法"><a name="boshiamy"></a>嘸蝦米輸入法</h3>
<ol>
<li>安裝 <a href="#hime">Hime</a>。</li>
<li>由<a href="http://boshiamy.com/download.html">嘸蝦米官方網站</a> → 「嘸蝦米輸入法 for Unix-like」，下載 gcin 適用的表格檔。</li>
<li>解壓縮 <code>boshiamy-gcin.tar.gz</code>，將其中的 <code>boshiamy-t.gtab</code> 複製到 <code>/usr/lib/hime/table</code>。</li>
<li>開啟 <code>~/.config/hime/gtab.list</code>，將嘸蝦米那一行的 <code>noseeing.gtab</code> 取代成 <code>boshiamy-t.gtab</code>。</li>
</ol>
<h3 id="Gmail_Notifier"><a name="gmail-notifier"></a>Gmail Notifier</h3>
<p>偵測到 Gmail 的新進信件時會由 Firefox 發出提醒。<br><a href="https://addons.mozilla.org/zh-tw/firefox/addon/gmail-notifier-restartless/?src=search">Gmail Notifier</a></p>
<h3 id="GNotifier"><a name="gnotifier"></a>GNotifier</h3>
<p>讓 Firefox 使用 GNOME、KDE、Xfce 或 OS X 桌面環境的提醒 (notification) 介面。<br><a href="https://addons.mozilla.org/zh-tw/firefox/addon/gnotifier/">GNotifier</a></p>
<h3 id="APT"><a name="apt"></a>APT</h3>
<p>以國網中心的 APT 伺服器取代台灣大學的：將 <code>/etc/apt/sources.list</code> 內的 <code>tw.archive.ubuntu.com</code> 取代為 <code>free.nchc.org.tw</code>。</p>
<h3 id="Gnome_Tweak_Tool"><a name="gnome-tweak-tool"></a>Gnome Tweak Tool</h3>
<p>依個人喜好調整預設設定。</p>
<h3 id="Input_Method_Configuration"><a name="im-config"></a>Input Method Configuration</h3>
<p>先安裝 <a href="#hime">Hime</a>，接著由 <code>Activities</code> → <code>Input Method</code> 選擇 hime。</p>
<h3 id="Online_Accounts"><a name="online-accounts"></a>Online Accounts</h3>
<p>由 <code>Activities</code> → <code>System Settings</code> → <code>Online Accounts</code> 登入 Google 帳戶，登入後可將右方不希望同步的功能關閉。若有開啟 Calendar 同步，可由螢幕最上方正中央的 Calendar 下拉選單中看到將近的活動，提醒時間到時也會由 Evolution 彈出視窗提醒。</p>
]]></content>
    
    
      <category term="software" scheme="http://changyuheng.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Codeforces Problem 1B]]></title>
    <link href="http://changyuheng.github.io/codeforces-problem-1b/"/>
    <id>http://changyuheng.github.io/codeforces-problem-1b/</id>
    <published>2014-04-10T16:00:00.000Z</published>
    <updated>2014-08-03T06:39:10.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://codeforces.com/problemset/problem/1/B">Codeforces Problem 1B</a></p>
<p>這題考的是經典的試算表 (spreadsheet) 座標轉換。這個問題的重點在對數字進位的處理。訣竅在於把 one-based column 當成 zero-based 來處理。</p>
<p><a href="http://codeforces.com/contest/1/submission/6457739">我的 Python 解法</a></p>
]]></content>
    
    
      <category term="algorithm" scheme="http://changyuheng.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[My Longest Streak on GitHub]]></title>
    <link href="http://changyuheng.github.io/github-streak/"/>
    <id>http://changyuheng.github.io/github-streak/</id>
    <published>2014-04-04T10:02:00.000Z</published>
    <updated>2014-08-04T14:14:29.000Z</updated>
    <content type="html"><![CDATA[<p>這不是什麼值得驕傲的事，只是一時興致起來，洗了一下 GitHub 的 longest streak。</p>
<p><img src="github-longest-streak.png" alt="GitHub Longest Streak"></p>
]]></content>
    
    
      <category term="programming" scheme="http://changyuheng.github.io/tags/programming/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Gnome 3.6 與 KDE 4.10 於工作場所使用一年心得]]></title>
    <link href="http://changyuheng.github.io/gnome-36-yu-kde-410-yu-gong-zuo-chang-suo-shi-yong-nian-xin-de/"/>
    <id>http://changyuheng.github.io/gnome-36-yu-kde-410-yu-gong-zuo-chang-suo-shi-yong-nian-xin-de/</id>
    <published>2013-09-17T16:00:00.000Z</published>
    <updated>2014-08-03T06:39:10.000Z</updated>
    <content type="html"><![CDATA[<p>在工作上使用 <a href="http://www.kde.org/">KDE</a> 一年有餘，從 4.8 用到 4.10。最近同時也在使用 <a href="http://www.gnome.org/">Gnome</a> 3.6，網路上的比較文章不少，再增加一篇，希望我能提供較新版本的使用經驗與不同的看法。</p>
<p>KDE 和 Gnome 的地位是一樣的，他們同樣是<a href="http://zh.wikipedia.org/zh-tw/%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83">桌面環境</a>。桌面環境簡言之即是一般使用者面對電腦的軟體介面，他包含了圖形、操作方法（如視窗的概念）、硬體管理、提供應用程式表現的方式……等，族繁不及備載。</p>
<p>KDE 與 Gnome 所使用的圖形引擎的不同，是一個很重要的差別。但若著重於桌面環境對工作效率的影響，這就不見得是一件重要的事。</p>
<p>概括來說，KDE 和 Gnome 都提供了漂亮且成熟的界面，兩者都能提供一般操作之所需。</p>
<p>以下逐項比較我所重視的部分：</p>
<ol>
<li><p>穩定度：<br>KDE 4.8 到 4.10 之間，穩定性都非常棒，似乎沒有 UI crash 的印象。Gnome 3.6 的穩定性比起稍早之前的版本，已經好很多，但偶爾還是會發生一些怪異的情況，例如視窗鍵按了沒反應。過去一年的經驗中，KDE 的穩定度幾乎是 Windows 7 等級的，而 Gnome 則還有待加強。</p>
</li>
<li><p>功能豐富度：<br>Gnome 和 KDE 都提供了許多功能，不過 KDE 所提供的功能、自定性更加多元和完整，也優化了更多細節。</p>
</li>
<li><p>美觀：<br>同樣注重外觀設計，我比較喜歡 Gnome 的 UI，不過 KDE 的特效比較多。</p>
</li>
<li><p>效能：<br>沒有仔細比較過，至少編譯 AOSP 程式碼的瓶頸不在桌面環境。不過在做視窗拖曳時，KDE 的視窗跟隨游標明顯比 Gnome 來得緊。</p>
</li>
<li><p>資源：<br>網路上 Gnome 或 GTK 的使用教學或問答比較多。但以 GUI 程式開發來說 Qt 比較被推薦。</p>
</li>
<li><p>與應用軟體的整合度：<br>都很優異，不過單以 file manager 來說，KDE 的 Dolphin 做得比 Gnome 的 Nautilus 更多。<br>題外話，個人覺得 Okular 比 Document Viewer 好，因為他支援畫記與註解，適合用來讀電子書；不過 Document Viewer 的搜尋速度快很多。Konsole 獨有的 copy on select 我也很喜歡。</p>
</li>
<li><p>檔案總管：<br>承上，Dolphin 比 Nautilus 來得強大許多，尤其是整合 terminal 的功能，絕對稱得上是 killer feature。</p>
</li>
<li><p>輸入法：<br>我使用 Gcin 或 Hime 框架搭配嘸蝦米都沒遇到問題。</p>
</li>
</ol>
<p>目前的情形下我推薦初次使用 Linux 的朋友 KDE，因為他功能較多，穩定性也較高，不太需要再自行安裝其他工具來補強，或是拿出終端機敲打命令。</p>
<p>而對於成熟的 Linux 使用者，在軟體的穩定性都達到堪用的情形下，我認為選擇的重點該放在「設計哲學」。活躍的開發團隊要提供更穩定的環境是遲早的事，Gnome 或 KDE 所欠缺的功能也大都有第三方的程式可以完成。透過什麼引擎來呈現，對於沒有特殊信仰的非開發者來說，根本沒有差別。但設計哲學直接影響到使用習慣以及工作效率和可能的發展方向。譬如說輕量化的桌面環境首推 LXDE，而 Gnome 和 KDE 同樣強調使用經驗、美觀和完整度，同質性非常高，對於操作方式的設計哲學即是最重要的差異。放下微小 bug 所帶來的不悅，以及引擎、授權等所產生的先入為主，直接體驗使用經驗，才能公平地選擇。</p>
<p>我比較喜歡 Gnome 3，因為操作比較簡單。而且我很享受按下 Gnome 3 提供的各類大顆按鈕的明確反差的感覺。</p>
<p>相關資料：</p>
<ul>
<li><a href="http://www.datamation.com/open-source/gnome-or-kde-the-old-question-is-new-today-1.html">GNOME or KDE? The Old Question Is New Today</a></li>
</ul>
]]></content>
    
    
      <category term="software" scheme="http://changyuheng.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在 Ubuntu 12.04 安裝 IT-830UP 晶片讀卡機與使用 WebATM]]></title>
    <link href="http://changyuheng.github.io/ubuntu-12-dot-04-an-zhuang-it-830up-jing-pian-du-qia-ji/"/>
    <id>http://changyuheng.github.io/ubuntu-12-dot-04-an-zhuang-it-830up-jing-pian-du-qia-ji/</id>
    <published>2013-01-28T17:33:00.000Z</published>
    <updated>2014-08-04T14:14:29.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://www.ittec.com.tw/images/IT-830UP%28DM%29.jpg" alt="IT-830UP"></p>
<h2 id="步驟_1-_安裝所需套件">步驟 1. 安裝所需套件</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> apt-get install pcscd pcsc-tools libccid</div></pre></td></tr></table></figure>

<p>完成後可能需要自行重新啟動電腦才會生效。</p>
<h2 id="步驟_2-_依照_WebATM_提供的方法安裝所需程式，如：玉山銀行">步驟 2. 依照 WebATM 提供的方法安裝所需程式，如：<a href="http://netbank.esunbank.com.tw/webatm/Q&amp;A_016.htm#01">玉山銀行</a></h2>
]]></content>
    
    
      <category term="software" scheme="http://changyuheng.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在 Ubuntu 12.10 的 gcin 輸入法平台安裝嘸蝦米輸入法]]></title>
    <link href="http://changyuheng.github.io/zai-ubuntu-12-dot-10-an-zhuang-fu-xia-mi-shu-ru-fa/"/>
    <id>http://changyuheng.github.io/zai-ubuntu-12-dot-10-an-zhuang-fu-xia-mi-shu-ru-fa/</id>
    <published>2012-06-05T16:00:00.000Z</published>
    <updated>2014-08-04T14:14:29.000Z</updated>
    <content type="html"><![CDATA[<h2 id="步驟_1：安裝_gcin_及_im-switch">步驟 1：安裝 gcin 及 im-switch</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> apt-get install gcin im-switch</div></pre></td></tr></table></figure>

<h2 id="步驟_2：指定預設輸入法平台為_gcin，完成後重新啟動電腦">步驟 2：指定預設輸入法平台為 gcin，完成後重新啟動電腦</h2>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">im-switch</div></pre></td></tr></table></figure>

<h2 id="步驟_3：下載並解壓縮嘸蝦米官方提供的_gcin_用表格，接著開啟終端機並進入解壓縮目錄">步驟 3：下載並解壓縮嘸蝦米官方提供的 gcin 用表格，接著開啟終端機並進入解壓縮目錄</h2>
<h2 id="步驟_4：將表格等檔案複製到系統中">步驟 4：將表格等檔案複製到系統中</h2>
<h3 id="1-_前置作業">1. 前置作業</h3>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> updatedb</div></pre></td></tr></table></figure>

<h3 id="2-_複製_*-gtab_到_gcin_表格目錄">2. 複製 *.gtab 到 gcin 表格目錄</h3>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> cp *.gtab $(locate gtab | grep gcin/table | <span class="keyword">while</span> <span class="built_in">read</span> line; <span class="keyword">do</span> dirname <span class="string">"<span class="variable">$line</span>"</span>; <span class="keyword">done</span> | sort -u)</div></pre></td></tr></table></figure>

<h3 id="3-_複製_*-png_到_gcin_icon_目錄">3. 複製 *.png 到 gcin icon 目錄</h3>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> cp *.png $(locate pinyin.png | grep gcin | <span class="keyword">while</span> <span class="built_in">read</span> line; <span class="keyword">do</span> dirname <span class="string">"<span class="variable">$line</span>"</span>; <span class="keyword">done</span> | sort -u)</div></pre></td></tr></table></figure>

<h2 id="步驟_5：編輯_gtab-list">步驟 5：編輯 gtab.list</h2>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">"嘸蝦米(繁) 1 boshiamy-t.gtab boshiamy-t.png"</span> &gt;&gt; ~/.gcin/gtab.list</div></pre></td></tr></table></figure>

<h2 id="步驟_6：重新啟動_gcin">步驟 6：重新啟動 gcin</h2>
<h2 id="步驟_7：調整_gcin_設定">步驟 7：調整 gcin 設定</h2>
<h3 id="1-_在【內定輸入法_&amp;_開啟/關閉】中調整嘸蝦米是否為預設輸入法、可否由_ctrl_+_shift_切換">1. 在【內定輸入法 &amp; 開啟/關閉】中調整嘸蝦米是否為預設輸入法、可否由 ctrl + shift 切換</h3>
<h3 id="2-_在【倉頡/行列/嘸蝦米/大易設定】中將【預覽/預選_字】調整為【全部開啟】">2. 在【倉頡/行列/嘸蝦米/大易設定】中將【預覽/預選 字】調整為【全部開啟】</h3>
]]></content>
    
    
      <category term="software" scheme="http://changyuheng.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Syncing Samba Accounts with Unix Login Accounts]]></title>
    <link href="http://changyuheng.github.io/syncing-samba-accounts-with-unix-login-accounts/"/>
    <id>http://changyuheng.github.io/syncing-samba-accounts-with-unix-login-accounts/</id>
    <published>2011-12-05T16:00:00.000Z</published>
    <updated>2014-08-03T06:39:10.000Z</updated>
    <content type="html"><![CDATA[<p>libpam-smbpass</p>
]]></content>
    
    
      <category term="software" scheme="http://changyuheng.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Deployment of NCKU CSIE Gitit Theme]]></title>
    <link href="http://changyuheng.github.io/deployment-of-ncku-csie-gitit-theme/"/>
    <id>http://changyuheng.github.io/deployment-of-ncku-csie-gitit-theme/</id>
    <published>2010-04-21T16:00:00.000Z</published>
    <updated>2014-08-04T14:14:29.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://gitit.net/">Gitit</a> 是一套以 Git 作為 base 的 wiki 系統。這套 wiki 的優點可以在<a href="http://walkingice.blogspot.tw/2011/11/gitit-git-based-wiki.html">只放拖鞋的鞋櫃</a>看到。在網路上的高手 <a href="http://macropodus.github.io/gitit_mix_vimwiki.html">Macropodus</a> 研究出如何和 Vimwiki 結合後，又更強化了他的優勢。</p>
<p>不過 Gitit 預設的模版很沒有設計感，尤其是那個 logo 讓人看了很不舒服。所幸在 <a href="https://groups.google.com/forum/#!topic/gitit-discuss/g6rZWIOmiu8">Google Group</a> 發現了一套由成大資工所製作的好看佈景。以下將介紹如何安裝這套佈景：</p>
<ol>
<li><p>下載佈景<br>打包好的佈景可以在 <a href="https://github.com/CrBoy/csiewiki">GitHub</a> 上找到</p>
</li>
<li><p>安裝佈景<br>將包裏解開後，取代 Gitit 原來的 static 和 templates 資料夾</p>
</li>
</ol>
<p>到此為止都和這套佈景的官方安裝教學一樣。如果是採用發行版如 Ubuntu 所提供的 Gitit package，則已經完成。若是用 cabal 安裝, 則必須再安裝相依的套件，以 Ubuntu 為例：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">sudo</span> apt-get install libghc-filestore-data libc6 libffi6 libgmp10 libpcre3 zlib1g libjs-jquery libjs-jquery-ui</div></pre></td></tr></table></figure>

<p>完成的樣子可以參考<a href="http://wiki.csie.ncku.edu.tw/">成大資工 Wiki</a>。</p>
]]></content>
    
    
      <category term="software" scheme="http://changyuheng.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Codeforces 快速入門 (簡介、介紹、教學)]]></title>
    <link href="http://changyuheng.github.io/codeforces-quick-start/"/>
    <id>http://changyuheng.github.io/codeforces-quick-start/</id>
    <published>2010-04-19T16:00:00.000Z</published>
    <updated>2014-08-04T14:14:29.000Z</updated>
    <content type="html"><![CDATA[<ol>
<li><p>什麼是 <a href="http://codeforces.com/">Codeforces</a>？</p>
<p> Codeforces 是一個知名的程式競賽 (programming contest) 網站。我們可以在此網站上討論程式設計，練習或比賽解題，也可以舉辦比賽。</p>
</li>
<li><p>支援哪些語言？</p>
<ul>
<li>C</li>
<li>C++</li>
<li>C#</li>
<li>D</li>
<li>Delphi</li>
<li>Free Pascal</li>
<li>Haskell</li>
<li>Java</li>
<li>JavaScript</li>
<li>OCaml</li>
<li>PHP</li>
<li>Python</li>
<li>Ruby</li>
<li>Scala</li>
</ul>
</li>
<li><p>怎麼開始？</p>
<ol>
<li><p>註冊</p>
<ol>
<li><p>進入 <a href="http://codeforces.com/">Codeforces</a> 首頁</p>
</li>
<li><p>點選右上角「Register」以進入註冊頁面</p>
<p> <a href="images/codeforces-begin-to-register.png"><img src="images/codeforces-begin-to-register.png" alt="begin to register"></a></p>
</li>
<li><p>填寫註冊表單，完成後按下「Register (確定註冊)」</p>
<p> <a href="images/codeforces-registration-form.png"><img src="images/codeforces-registration-form.png" alt="registration form"></a></p>
<p>經過以上步驟即可完成註冊。</p>
<p>以下為選擇性設定：</p>
</li>
<li><p>登入</p>
</li>
<li><p>點選右上角自己的帳號，進入個人資料頁面</p>
</li>
<li><p>點選導覽列上的「SETTINGS」</p>
</li>
<li><p>在「GENERAL」這一頁，可以上傳個人頭像、重新設定密碼、電子信箱等</p>
</li>
<li><p>在「SOCIAL」這一頁，可以輸入真名及國家和城市。(有輸入國家和城市才能和自己國家的國民一起排名)</p>
</li>
</ol>
</li>
<li><p>進行一次練習</p>
<ol>
<li><p>解題</p>
<ol>
<li><p>點選導覽列上的 <a href="http://codeforces.com/problemset">PROBLEMSET</a> 進入考古題庫</p>
</li>
<li><p>點選最右邊的欄位標題「<a href="http://codeforces.com/problemset?order=BY_SOLVED_DESC">Solved</a>」</p>
</li>
<li><p>進入「<a href="http://codeforces.com/problemset/problem/1/A">Theater Square</a>」</p>
<p><a href="images/codeforces-problemset.png"><img src="images/codeforces-problemset.png" alt="problemset"></a></p>
<ul>
<li><p>題目最上方的</p>
<p>time limit per test: 2 seconds<br>memory limit per test: 64 megabytes<br>input: standard input<br>output: standard output</p>
</li>
<li><p>分別表示</p>
<p>時間限制：2 秒<br>使用記憶體大小限制：64 MB<br>輸入方式：標準輸入<br>輸出方式：標準輸出</p>
</li>
<li><p>接著是題目：</p>
<p>Theatre Square in the capital city of Berland has a rectangular shape with the size n × m meters. On the occasion of the city’s anniversary, a decision was taken to pave the Square with square granite flagstones. Each flagstone is of the size a × a.</p>
<p>What is the least number of flagstones needed to pave the Square? It’s allowed to cover the surface larger than the Theatre Square, but the Square has to be covered.<br>It’s not allowed to break the flagstones. The sides of flagstones should be parallel to the sides of the Square.</p>
</li>
<li><p>中文大意：</p>
<p>有一塊&nbsp;n × m (長 n，寬 m) 平方公尺矩形的地需要舖滿石磚，每塊石磚大小為正方形&nbsp;a × a。在不切割石磚、不重疊石的前題下，必需舖滿此地。石磚可以超出需要被舖的地，但石磚的邊必需與此地的邊平行。</p>
<p>請問最少需要多少石磚才能完成？</p>
</li>
<li><p>Input (說明測試程式會餵給我們的程式的資料)：</p>
<p>The input contains three positive integer numbers in the first line: n,  m and a (1 ≤  n, m, a ≤ 10^9).</p>
</li>
<li><p>中文說明：</p>
<p>輸入共一行，此行中包含三個整數：n, m, a，整數間以空白字元分隔。其中 1 ≤  n, m, a ≤ 10^9。</p>
</li>
<li><p>Output (說明我們的程式應該輸出什麼)：</p>
<p>Write the needed number of flagstones.</p>
</li>
<li><p>中文說明：</p>
<p>請輸出需要的石磚數。</p>
</li>
<li><p>範例：</p>
<p>Input:</p>
<p>6 6 4</p>
<p>Output:</p>
<p>4</p>
<p>註：</p>
<p>第一個 6 表示 n，第二個 6 表示 m，4 表示 a。亦即，在 6 × 6 大小的地上，舖以 4 × 4 大小的石磚，最少需要 4 塊石磚才能將其舖滿。</p>
</li>
<li><p>題解：</p>
<p>假設需要 p × q 塊石磚，其必需符合此條件：a × p ≥ m 且 a × q ≥ n。</p>
<p>將我們的解法用程式寫出來，並上傳到 Codeforces 即完成此題練習。</p>
</li>
</ul>
</li>
</ol>
</li>
<li><p>上傳</p>
<p> 在題目頁點選導覽列上的「SUBMIT」，確定 problem 是我們要解決的，選擇我們的程式的 language，接著貼上 source code 並按下「Submit」按鈕。</p>
<p> 按下按鈕後，會跳到 Status 這一頁，若我們的答案成功在題目的要求下解決此問題，在「Verdict」這一欄會出現綠色的 「Accepted」。</p>
<p> 如果我們在第 # 個測試中輸出的答案與測試器期望的答案不同，會出現「Wrong answer on test #」, 若是 source code 編譯錯誤，會出現「Compilation error」。若在第 # 次的測試中超過記憶體大小限制，會出現「Memory limit exceeded on test #」。若在第 # 次的測試中超過時限制，會出現「Time limit exceeded on test #」。此時我們可以按下左邊的流水號，以檢視出現錯誤的測項、錯誤訊息等。</p>
</li>
<li><p>參考其他人的答案</p>
<p> 寫完一道題目後，最重要的是檢討自己的答案。檢討的方法有很多，其中之一是觀察別人的解法。由導覽列 → PROBLEMSET 中找出我們的題目，並按下右方解題人數，即可看到大家對此題所寫的解法。</p>
<p> <a href="images/codeforces-solved.png"><img src="images/codeforces-solved.png" alt="solved"></a></p>
<p> 在頁面最下方可以自訂排序規則，我們可以依照 Solution Size (source code 大小) 或 Execution Time (執行時間長短) 來排序，以方便我們找出想要參考的答案。右方可以選擇我們想要看到的語言。</p>
<p> <a href="images/codeforces-solved-languages.png"><img src="images/codeforces-solved-languages.png" alt="languages"></a></p>
<p> 讀者可參考此題的 <a href="http://codeforces.com/contest/1/submission/1647521">Python 版解法</a>、<a href="http://codeforces.com/contest/1/submission/2337277">Ruby 版解法</a>、<a href="http://codeforces.com/contest/1/submission/889578">PHP 版解法</a>、<a href="http://codeforces.com/contest/1/submission/1337822">C 版解法</a>、<a href="http://codeforces.com/contest/1/submission/759">C++ 版解法</a>、<a href="http://codeforces.com/contest/1/submission/2032793">C# 版解法</a>、<a href="http://codeforces.com/contest/1/submission/604386">Java 版解法</a>、<a href="http://codeforces.com/contest/1/submission/1903268">Scala 版解法</a>、<a href="http://codeforces.com/contest/1/submission/5482791">JavaScript 版解法</a>。</p>
</li>
</ol>
</li>
</ol>
</li>
</ol>
]]></content>
    
    
      <category term="algorithm" scheme="http://changyuheng.github.io/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Windows Photo Viewer Mouse Plug-in]]></title>
    <link href="http://changyuheng.github.io/windows-photo-viewer-mouse-plug-in/"/>
    <id>http://changyuheng.github.io/windows-photo-viewer-mouse-plug-in/</id>
    <published>2009-09-22T16:00:00.000Z</published>
    <updated>2014-08-03T06:39:10.000Z</updated>
    <content type="html"><![CDATA[<p>This simple tool gives Windows Photo Viewer the following features:</p>
<ol>
<li>Middle click to toggle window’s size between normal and maximum.</li>
<li>Scroll up/down to show previous/next image.</li>
<li>Ctrl + scroll up/down to zoom in/out.</li>
<li>A to show actual size.</li>
<li>F to show fit size.</li>
<li>Ctrl + A to toggle deafult presenting style between actual size and fit size.</li>
</ol>
<p><strong><a href="https://raw.githubusercontent.com/changyuheng/windows-photo-viewer-mouse-plug-in/master/bin/windows-photo-viewer-mouse-plug-in.exe">Download</a></strong><br><strong><a href="https://github.com/changyuheng/windows-photo-viewer-mouse-plug-in">Source code</a></strong></p>
]]></content>
    
    
      <category term="programming" scheme="http://changyuheng.github.io/tags/programming/"/>
    
      <category term="software" scheme="http://changyuheng.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Markdown Test]]></title>
    <link href="http://changyuheng.github.io/markdown-test/"/>
    <id>http://changyuheng.github.io/markdown-test/</id>
    <published>2009-04-19T16:00:00.000Z</published>
    <updated>2014-08-04T14:14:29.000Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>

<blockquote>

<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>
</blockquote>


<blockquote>

<p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>
<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>


<blockquote>

<p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io">http://devdocs.io</a></p>
<footer><strong>@DevDocs</strong><cite><a href="https://twitter.com/devdocs/status/356095192085962752">twitter.com/devdocs/status/&hellip;</a></cite></footer></blockquote>


<blockquote>

<p>Every interaction is both precious and an opportunity to delight.</p>
<footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html">Welcome to Island Marketing</a></cite></footer></blockquote>


<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;stdio.h&gt;</span></div><div class="line"><span class="preprocessor">#<span class="keyword">include</span> &lt;string.h&gt;</span></div><div class="line"><span class="keyword">void</span> reverse_char_array(<span class="keyword">char</span> * first, <span class="keyword">char</span> * last) {</div><div class="line">    <span class="keyword">while</span> (first != last &amp;&amp; first != --last) {</div><div class="line">        *first ^= *last;</div><div class="line">        *last ^= *first;</div><div class="line">        *first++ ^= *last;</div><div class="line">    }</div><div class="line">}</div><div class="line"><span class="keyword">void</span> reverse_string(<span class="keyword">char</span> * sentence) {</div><div class="line">    reverse_char_array(sentence, &amp;sentence[<span class="built_in">strlen</span>(sentence)]);</div><div class="line">}</div><div class="line"><span class="keyword">void</span> reverse_word(<span class="keyword">char</span> * sentence) {</div><div class="line">    <span class="keyword">char</span> * end_s = &amp;sentence[<span class="built_in">strlen</span>(sentence)], * end_w;</div><div class="line">    <span class="keyword">while</span> (end_w != end_s) {</div><div class="line">        <span class="keyword">if</span> (!(end_w = <span class="built_in">strchr</span>(sentence, <span class="string">' '</span>))) end_w = end_s;</div><div class="line">        reverse_char_array(sentence, end_w);</div><div class="line">        sentence = end_w + <span class="number">1</span>;</div><div class="line">    }</div><div class="line">}</div><div class="line"><span class="keyword">int</span> main(<span class="keyword">int</span> argc, <span class="keyword">char</span> ** argv) {</div><div class="line">    <span class="keyword">char</span> sentence[] = <span class="string">"how are you"</span>;</div><div class="line">    reverse_string(sentence);</div><div class="line">    reverse_word(sentence);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, sentence);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">}</div></pre></td></tr></table></figure>

<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> Queue</div><div class="line"><span class="keyword">import</span> argparse</div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> random</div><div class="line"><span class="keyword">import</span> subprocess</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> threading</div><div class="line"><span class="keyword">import</span> time</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tester</span><span class="params">(threading.Thread)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, testee, answer_queue, counter_queue)</span>:</span></div><div class="line">        threading.Thread.__init__(self)</div><div class="line">        self.testee = testee</div><div class="line">        self.answer_queue = answer_queue</div><div class="line">        self.counter_queue = counter_queue</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">            ans = self.answer_queue.get()</div><div class="line">            counter = <span class="number">1</span></div><div class="line">            p = subprocess.Popen(self.testee,</div><div class="line">                    stdin=subprocess.PIPE, stdout=subprocess.PIPE)</div><div class="line">            <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">                guess = p.stdout.readline().strip()</div><div class="line">                bulls = sum(<span class="number">1</span> <span class="keyword">for</span> i, j <span class="keyword">in</span> zip(ans, guess) <span class="keyword">if</span> i == j)</div><div class="line">                cows = sum(<span class="number">1</span> <span class="keyword">for</span> i, j <span class="keyword">in</span> zip(ans, guess)<span class="keyword">if</span> i != j <span class="keyword">and</span> j <span class="keyword">in</span> ans)</div><div class="line">                score = str(bulls) + <span class="string">'a'</span> + str(cows) + <span class="string">'b'</span> + <span class="string">'\n'</span></div><div class="line">                p.stdin.write(score)</div><div class="line">                <span class="keyword">if</span> bulls == <span class="number">4</span>:</div><div class="line">                    self.answer_queue.task_done()</div><div class="line">                    self.counter_queue.put(counter)</div><div class="line">                    counter = <span class="number">1</span></div><div class="line">                    <span class="keyword">break</span></div><div class="line">                counter += <span class="number">1</span></div><div class="line">            <span class="keyword">if</span> self.answer_queue.empty():</div><div class="line">                <span class="keyword">break</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_args</span><span class="params">()</span>:</span></div><div class="line">    args_parser = argparse.ArgumentParser(</div><div class="line">            formatter_class=argparse.RawDescriptionHelpFormatter,</div><div class="line">            description=<span class="string">'Profile a bulls-and-cows guesser.'</span>,</div><div class="line">            epilog=<span class="string">'EXAMPLE:\n'</span> \</div><div class="line">                    <span class="string">"  {} -j 8 './bulls-and-cows-guesser.py'"</span>.format(os.path.basename(__file__))</div><div class="line">                    )</div><div class="line">    args_parser.add_argument(<span class="string">'testee'</span> , metavar=<span class="string">'TESTEE'</span>,</div><div class="line">            help=<span class="string">'the guesser you want to evaluate'</span>)</div><div class="line">    args_parser.add_argument(<span class="string">'-j'</span>, <span class="string">'--jobs'</span>, metavar=<span class="string">'N'</span>, type=int, default=<span class="number">1</span>,</div><div class="line">            help=<span class="string">'allow N jobs at once'</span>)</div><div class="line">    args_parser.add_argument(<span class="string">'--no-shuffle'</span>, action=<span class="string">'store_true'</span>,</div><div class="line">            help=<span class="string">'do not shuffle the test casees'</span>)</div><div class="line">    <span class="keyword">return</span> args_parser.parse_args()</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_all_answers</span><span class="params">(shuffle)</span>:</span></div><div class="line">    answer_candidates = [str(i) + str(j) + str(k) + str(l) \</div><div class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>, <span class="number">10</span>) <span class="keyword">for</span> j <span class="keyword">in</span> xrange(<span class="number">0</span>, <span class="number">10</span>) \</div><div class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> xrange(<span class="number">0</span>, <span class="number">10</span>) <span class="keyword">for</span> l <span class="keyword">in</span> xrange(<span class="number">0</span>, <span class="number">10</span>) \</div><div class="line">                <span class="keyword">if</span> len(set(str(i) + str(j) + str(k) + str(l))) == <span class="number">4</span>]</div><div class="line"></div><div class="line">    <span class="keyword">if</span> shuffle:</div><div class="line">        random.shuffle(answer_candidates)</div><div class="line"></div><div class="line">    <span class="keyword">return</span> answer_candidates</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    args = get_args()</div><div class="line">    answer_candidates = get_all_answers(<span class="keyword">not</span> args.no_shuffle)</div><div class="line"></div><div class="line">    answer_queue = Queue.Queue()</div><div class="line">    counter_queue = Queue.Queue()</div><div class="line">    <span class="keyword">for</span> ans <span class="keyword">in</span> answer_candidates:</div><div class="line">        answer_queue.put(ans)</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(args.jobs):</div><div class="line">        t = Tester(args.testee, answer_queue, counter_queue)</div><div class="line">        t.daemon = <span class="keyword">True</span></div><div class="line">        t.start()</div><div class="line"></div><div class="line">    answer_queue.join()</div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        <span class="keyword">if</span> counter_queue.qsize() == len(answer_candidates):</div><div class="line">            <span class="keyword">break</span></div><div class="line"></div><div class="line">    counter = []</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(answer_candidates)):</div><div class="line">        counter.append(counter_queue.get())</div><div class="line"></div><div class="line">    <span class="keyword">print</span> <span class="string">'avg: '</span>, float(sum(counter)) / len(counter)</div><div class="line">    d = {}</div><div class="line">    <span class="keyword">for</span> v <span class="keyword">in</span> counter:</div><div class="line">        <span class="keyword">if</span> v <span class="keyword">not</span> <span class="keyword">in</span> d:</div><div class="line">            d[v] = <span class="number">1</span></div><div class="line">            <span class="keyword">continue</span></div><div class="line">        d[v] += <span class="number">1</span></div><div class="line">    <span class="keyword">print</span> str(d)[<span class="number">1</span>:len(str(d))-<span class="number">1</span>]</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure>

<figure class="highlight"><figcaption><span>.compact</span><a href="http://underscorejs.org/#compact">Underscore.js</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">.compact([<span class="number">0</span>, <span class="number">1</span>, <span class="keyword">false</span>, <span class="number">2</span>, ‘’, <span class="number">3</span>]);</div><div class="line"><span class="output"><span class="status">=&gt;</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span></div></pre></td></tr></table></figure>

<script src="https://gist.github.com/9265765.js"></script>

<p>$a = b + c$<br>$A = B + C$</p>
<p>$$\frac{\partial u}{\partial t}<br>= h^2 \left( \frac{\partial^2 u}{\partial x^2} +<br>\frac{\partial^2 u}{\partial y^2} +<br>\frac{\partial^2 u}{\partial z^2}\right)$$</p>
<p>This equation <span>$\cos 2\theta = \cos^2 \theta - \sin^2 \theta =  2 \cos^2 \theta - 1$</span> is inline.</p>
<span>$$\begin{aligned}
\dot{x} & = \sigma(y-x) \\
\dot{y} & = \rho x - y - xz \\
\dot{z} & = -\beta z + xy
\end{aligned}$$</span>

<table>
<thead>
<tr>
<th style="text-align:left">Left-Aligned</th>
<th style="text-align:center">Center Aligned</th>
<th style="text-align:right">Right Aligned</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">col 3 is</td>
<td style="text-align:center">some wordy text</td>
<td style="text-align:right">$1600</td>
</tr>
<tr>
<td style="text-align:left">col 2 is</td>
<td style="text-align:center">centered</td>
<td style="text-align:right">$12</td>
</tr>
<tr>
<td style="text-align:left">zebra stripes</td>
<td style="text-align:center">are neat</td>
<td style="text-align:right">$1</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:left">Left-Aligned</th>
<th style="text-align:left">Center Aligned</th>
<th style="text-align:left">Right Aligned</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">col 3 is</td>
<td style="text-align:left">some wordy text</td>
<td style="text-align:left">$1600</td>
</tr>
<tr>
<td style="text-align:left">col 2 is</td>
<td style="text-align:left">centered</td>
<td style="text-align:left">$12</td>
</tr>
<tr>
<td style="text-align:left">zebra stripes</td>
<td style="text-align:left">are neat</td>
<td style="text-align:left">$1</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center">Left-Aligned</th>
<th style="text-align:center">Center Aligned</th>
<th style="text-align:center">Right Aligned</th>
<th style="text-align:center">Left-Aligned</th>
<th style="text-align:center">Center Aligned</th>
<th style="text-align:center">Right Aligned</th>
<th style="text-align:center">Left-Aligned</th>
<th style="text-align:center">Center Aligned</th>
<th style="text-align:center">Right Aligned</th>
<th style="text-align:center">Left-Aligned</th>
<th style="text-align:center">Center Aligned</th>
<th style="text-align:center">Right Aligned</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">col 3 is</td>
<td style="text-align:center">some wordy text</td>
<td style="text-align:center">$1600</td>
<td style="text-align:center">col 3 is</td>
<td style="text-align:center">some wordy text</td>
<td style="text-align:center">$1600</td>
<td style="text-align:center">col 3 is</td>
<td style="text-align:center">some wordy text</td>
<td style="text-align:center">$1600</td>
<td style="text-align:center">col 3 is</td>
<td style="text-align:center">some wordy text</td>
<td style="text-align:center">$1600</td>
</tr>
<tr>
<td style="text-align:center">col 2 is</td>
<td style="text-align:center">centered</td>
<td style="text-align:center">$12</td>
<td style="text-align:center">col 2 is</td>
<td style="text-align:center">centered</td>
<td style="text-align:center">$12</td>
<td style="text-align:center">col 2 is</td>
<td style="text-align:center">centered</td>
<td style="text-align:center">$12</td>
<td style="text-align:center">col 2 is</td>
<td style="text-align:center">centered</td>
<td style="text-align:center">$12</td>
</tr>
<tr>
<td style="text-align:center">zebra stripes</td>
<td style="text-align:center">are neat</td>
<td style="text-align:center">$1</td>
<td style="text-align:center">zebra stripes</td>
<td style="text-align:center">are neat</td>
<td style="text-align:center">$1</td>
<td style="text-align:center">zebra stripes</td>
<td style="text-align:center">are neat</td>
<td style="text-align:center">$1</td>
<td style="text-align:center">zebra stripes</td>
<td style="text-align:center">are neat</td>
<td style="text-align:center">$1</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:right">Left-Aligned</th>
<th style="text-align:right">Center Aligned</th>
<th style="text-align:right">Right Aligned</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">col 3 is</td>
<td style="text-align:right">some wordy text</td>
<td style="text-align:right">$1600</td>
</tr>
<tr>
<td style="text-align:right">col 2 is</td>
<td style="text-align:right">centered</td>
<td style="text-align:right">$12</td>
</tr>
<tr>
<td style="text-align:right">zebra stripes</td>
<td style="text-align:right">are neat</td>
<td style="text-align:right">$1</td>
</tr>
</tbody>
</table>
<p>perform_complicated_task<br>do_this_and_do_that_and_another_thing</p>
<p><a href="http://example.com">http://example.com</a></p>
<p><del>deleted.</del></p>
content<br />
1. a<br />
1. b<br />
    1. A<br />
    1. B<br />
    * C<br />
ABCDEFG<br />
1234567<br />

<iframe width="100%" height="300" src="http://jsfiddle.net/QkPBF/embedded/js,resources,html,css,result/light" frameborder="0" allowfullscreen></iframe>
]]></content>
    
    
      <category term="misc" scheme="http://changyuheng.github.io/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AutoCheckIn for Garena]]></title>
    <link href="http://changyuheng.github.io/autocheckin-for-garena/"/>
    <id>http://changyuheng.github.io/autocheckin-for-garena/</id>
    <published>2008-06-07T16:00:00.000Z</published>
    <updated>2014-08-03T06:39:10.000Z</updated>
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/changyuheng/garena-autocheckin/master/screenshot.png" alt="screenshot"></p>
<p>支援：Garena 3.x 中文版 &amp; 2010 (4.0.1.6127) English Version、中文版</p>
<p>作業系統：Windows 2000 / XP / Vista / 7 32-bit &amp; 64-bit</p>
<p><strong>特色</strong></p>
<ol>
<li>背景自動擠房</li>
<li>開放原始碼</li>
</ol>
<p><strong>使用方法</strong></p>
<ol>
<li>執行 AutoCheckIn</li>
<li>雙擊房間即可自動擠房</li>
<li>開始擠房後，可以最小化 Garena。</li>
<li>進入房間後，若 Garena 提示：「您仍在房間裡，要離開房間嗎？」，把它關掉就好了。</li>
</ol>
<p>成功加入房間後，程式會彈到最上層提示。</p>
<p><strong>類似的軟體</strong></p>
<ol>
<li><a href="http://kloerhe.pixnet.net/blog/post/23885234-[-作品-]-garena-room-joiner-2-#-支援-xp---vista-#-05-19-">Garena Room Joiner 2</a></li>
</ol>
<p>[<strong><a href="https://raw.githubusercontent.com/changyuheng/garena-autocheckin/master/AutoCheckIn.exe">下載</a></strong>]<br>[<strong><a href="https://github.com/changyuheng/garena-autocheckin">原始碼</a></strong>]</p>
]]></content>
    
    
      <category term="programming" scheme="http://changyuheng.github.io/tags/programming/"/>
    
      <category term="software" scheme="http://changyuheng.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PTT Efficient Poster]]></title>
    <link href="http://changyuheng.github.io/ptt-efficient-poster/"/>
    <id>http://changyuheng.github.io/ptt-efficient-poster/</id>
    <published>2007-11-05T16:00:00.000Z</published>
    <updated>2014-08-03T06:39:10.000Z</updated>
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/changyuheng/ptt-efficient-poster/master/screenshot.png" alt="screenshot"></p>
<p>在PTT上發表文章，會依文章長度得到相當的稿酬；而稿酬的單位就是所謂的 P 幣。然而，PTT 判斷一篇文章值多少 P 幣，不只看總字數，還會計算使用者輸入的次數。現在公認的稿酬計算公式是，每 2 秒輸入 2 個中文字獲得 1 元，某些特殊字元或重複字不列入計算。因此，使用新注音等一次輸入好幾個字的輸入法輸入文字，相較於其他逐字輸入的輸入法，PTT 偵測到的輸入次數會少很多，換句話說稿酬也少很多。</p>
<p>這套軟體可以幫您把一整篇文章，在背景逐字輸入到 PCMan 視窗中。在字與字之間，會自動加入經過計算的最佳延遲時間並取消重複字之間的延遲，讓您的文章能得到該文所能得到的最高稿酬。網路上有好幾種不同的軟體能自動輸入文章，但是這些軟體多半不能在「背景運行」，也不能支援控制碼或雙色字。</p>
<p>※所謂的「背景運行」，係指 PCMan 視窗不必在最上層，軟體也能自動輸入文章；亦即貼文時，還可以做其他的事。</p>
<p><strong>特色</strong></p>
<ol>
<li>支援 BBS 控制碼。</li>
<li>支援雙色全形字（一字雙色）。</li>
<li>支援 Big-5 擴充字集（支援 Unicode 補完計畫內的日文字）。</li>
<li>支援背景運行。</li>
<li>支援暫停。</li>
</ol>
<p><strong>使用方式</strong></p>
<ol>
<li>修改 PTT 設定 <pre>
 ‧ 修改 PTT 站台設定如下：
 　　(U)ser 【 個人設定區 】
 　　　(U)Customize 個人化設定
 　　　　i. DBCS 自動偵測雙位元字集(如全型中文)　　　　：是
 　　　　j. DBCS 忽略連線程式為雙位元字集送出的重複按鍵：是
 　　　　k. DBCS 禁止在雙位元中使用色碼(去除一字雙色)　：否
 </pre></li>
<li>複製欲張貼的文章到剪貼簿。（可在記事本中先排版好再複製，也可複製 PCMan 的 ANSI 編輯器中的彩色文字。）</li>
<li>進入發文狀態。</li>
<li>按下 Shift + F10 開始張貼。</li>
</ol>
<hr>
<ul>
<li>開始張貼後，可以切換到別的視窗做其他事，唯獨不可以在 PCMan 中另開新分頁。</li>
<li>張貼完成後程式會自動彈出提示視窗。</li>
<li>欲暫停張貼，請按 Shift + F11。在工作列圖示的選單中取消暫停即可繼續貼文。</li>
<li>欲取消張貼，請按 Shift + F12 重新載入本程式，或關閉本程式</li>
</ul>
<p>[<strong><a href="https://raw.githubusercontent.com/changyuheng/ptt-efficient-poster/master/PTTEfficientPoster.exe">下載</a></strong>]<br>[<strong><a href="https://github.com/changyuheng/ptt-efficient-poster">原始碼</a></strong>]</p>
<p>作業系統：Windows 2000 / XP / Vista / 7 32-bit &amp; 64-bit<br>※ 只能在 PCMan 使用</p>
]]></content>
    
    
      <category term="programming" scheme="http://changyuheng.github.io/tags/programming/"/>
    
      <category term="software" scheme="http://changyuheng.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[War3Customkey Classic]]></title>
    <link href="http://changyuheng.github.io/war3customkey-classic/"/>
    <id>http://changyuheng.github.io/war3customkey-classic/</id>
    <published>2006-11-23T16:00:00.000Z</published>
    <updated>2014-08-03T06:39:10.000Z</updated>
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/changyuheng/war3customkey-classic/master/screenshot.png" alt="screenshot"></p>
<p>支援：Warcraft III<br>作業系統：Windows 2000 / XP / Vista / 7 32-bit &amp; 64-bit</p>
<p>[<strong><a href="https://raw.githubusercontent.com/changyuheng/war3customkey-classic/master/War3Customkey.exe">下載</a></strong>]<br>[<strong><a href="https://github.com/changyuheng/war3customkey-classic">原始碼</a></strong>]</p>
]]></content>
    
    
      <category term="programming" scheme="http://changyuheng.github.io/tags/programming/"/>
    
      <category term="software" scheme="http://changyuheng.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[War3Customkey]]></title>
    <link href="http://changyuheng.github.io/war3customkey/"/>
    <id>http://changyuheng.github.io/war3customkey/</id>
    <published>2005-02-18T16:00:00.000Z</published>
    <updated>2014-08-03T06:39:10.000Z</updated>
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/changyuheng/war3customkey/master/screenshot.png" alt="screenshot"></p>
<p>支援：Warcraft III<br>作業系統：Windows 2000 / XP / Vista / 7 32-bit &amp; 64-bit</p>
<p><strong>特色</strong></p>
<ol>
<li>自定按鍵對應</li>
<li>罐頭訊息</li>
<li>巨集</li>
<li>滑鼠連點</li>
</ol>
<p><strong>使用方法</strong></p>
<p>請見說明文件</p>
<p>[<strong><a href="https://raw.githubusercontent.com/changyuheng/war3customkey/master/War3Customkey.exe">下載</a></strong>]<br>[<strong><a href="https://github.com/changyuheng/war3customkey">原始碼</a></strong>]</p>
]]></content>
    
    
      <category term="programming" scheme="http://changyuheng.github.io/tags/programming/"/>
    
      <category term="software" scheme="http://changyuheng.github.io/tags/software/"/>
    
  </entry>
  
</feed>
